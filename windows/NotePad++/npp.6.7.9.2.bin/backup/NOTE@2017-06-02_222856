

exec [dbo].[zConvertLunarSolar] 1987,12,18,10,20,0,1
exec [dbo].[zConvertLunarSolar] 1987,10,28,10,20,0,0

exec [dbo].[zConvertLunarSolar] 1984,10,8,8,20,0,1
exec [dbo].[zConvertLunarSolar] 1984,9,14,8,20,0,0

exec [dbo].[zConvertLunarSolar] 1986,11,14,2,20,0,1
exec [dbo].[zConvertLunarSolar] 1986,10,13,8,20,0,0

exec [dbo].[zConvertLunarSolar] 1993,6,29,22,20,0,1
exec [dbo].[zConvertLunarSolar] 1993,5,10,22,20,0,0

exec [dbo].[hAddMingZhu] '','女',1984,10,8,8,20,0,1,''
exec [dbo].[hAddMingZhu] '','女',1993,6,29,22,20,0,1,''
exec [dbo].[hAddMingZhu] '','男',1986,11,14,2,20,0,1,''
exec [dbo].[hAddMingZhu] '','男',1987,12,18,10,20,0,1,''

1.逻辑与运算

declare @a int,@b int
set @a=38320
set @b=32768
select @a&@b,@a|@b,@a^@b
set @b=16384
select @a&@b,@a|@b,@a^@b

32768	38320	5552
0	54704	54704

2.位移运算

declare @i int = 1 -- integer
declare @n int = 14 -- shift
-- Function
declare @m int,@s int
select  @n%=32,@m=power(2,31-@n),@s=@i&@m,@i&=@m-1,@i*=power(2.,@n)
if(@s>0)set @i|=0x80000000
select @i -- -1382285312

16384

3.十六进制与十进制的转换
SELECT CONVERT(VARBINARY(50), 38320)
0x000095B0
SELECT CONVERT(VARBINARY(50), 65535)
0x0000FFFF

select Convert(int,0x095B0) , Convert(int,0x0000FFFF)
38320	65535



===================================================

select sys.fn_MSorbitmaps(0xAABB00CC, 0x000003) --0xAABB03CC

select sys.fn_MSorbitmaps(0x095B0, 0x0000FFFF)
select sys.fn_MSorbitmaps(38320, 65535)


SELECT CONVERT(VARBINARY(50), 38320)
0x000095B0
SELECT CONVERT(VARBINARY(50), 65535)
0x0000FFFF
select Convert(int,0x095B0) 
38320
select Convert(int,0x0000FFFF) 
65535
select sys.fn_MSorbitmaps(38320, 65535)
0x0000FFFF

SELECT master.dbo.fn_varbintohexstr(38320)
SELECT master.dbo.fn_varbintohexsubstring(1,38320,1,0)

select 38320 & 65535,1<<8



   #region 阴历数据
        /// <summary>
        /// 来源于网上的农历数据
        /// </summary>
        /// <remarks>
        /// 数据结构如下，共使用17位数据
        /// 第17位：表示闰月天数，0表示29天   1表示30天
        /// 第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
        /// 第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
        ///</remarks>
        private static int[] LunarDateArray = new int[]{
                0x04BD8,0x04AE0,0x0A570,0x054D5,0x0D260,0x0D950,0x16554,0x056A0,0x09AD0,0x055D2,
                0x04AE0,0x0A5B6,0x0A4D0,0x0D250,0x1D255,0x0B540,0x0D6A0,0x0ADA2,0x095B0,0x14977,
                0x04970,0x0A4B0,0x0B4B5,0x06A50,0x06D40,0x1AB54,0x02B60,0x09570,0x052F2,0x04970,
                0x06566,0x0D4A0,0x0EA50,0x06E95,0x05AD0,0x02B60,0x186E3,0x092E0,0x1C8D7,0x0C950,
                0x0D4A0,0x1D8A6,0x0B550,0x056A0,0x1A5B4,0x025D0,0x092D0,0x0D2B2,0x0A950,0x0B557,
                0x06CA0,0x0B550,0x15355,0x04DA0,0x0A5B0,0x14573,0x052B0,0x0A9A8,0x0E950,0x06AA0,
                0x0AEA6,0x0AB50,0x04B60,0x0AAE4,0x0A570,0x05260,0x0F263,0x0D950,0x05B57,0x056A0,
                0x096D0,0x04DD5,0x04AD0,0x0A4D0,0x0D4D4,0x0D250,0x0D558,0x0B540,0x0B6A0,0x195A6,
                0x095B0,0x049B0,0x0A974,0x0A4B0,0x0B27A,0x06A50,0x06D40,0x0AF46,0x0AB60,0x09570,
                0x04AF5,0x04970,0x064B0,0x074A3,0x0EA50,0x06B58,0x055C0,0x0AB60,0x096D5,0x092E0,
                0x0C960,0x0D954,0x0D4A0,0x0DA50,0x07552,0x056A0,0x0ABB7,0x025D0,0x092D0,0x0CAB5,
                0x0A950,0x0B4A0,0x0BAA4,0x0AD50,0x055D9,0x04BA0,0x0A5B0,0x15176,0x052B0,0x0A930,
                0x07954,0x06AA0,0x0AD50,0x05B52,0x04B60,0x0A6E6,0x0A4E0,0x0D260,0x0EA65,0x0D530,
                0x05AA0,0x076A3,0x096D0,0x04BD7,0x04AD0,0x0A4D0,0x1D0B6,0x0D250,0x0D520,0x0DD45,
                0x0B5A0,0x056D0,0x055B2,0x049B0,0x0A577,0x0A4B0,0x0AA50,0x1B255,0x06D20,0x0ADA0,
                0x14B63        
                };

        #endregion

		#region GetChineseMonthDays
        //传回农历 y年m月的总天数
        private int GetChineseMonthDays(int year, int month)
        {
            if (BitTest32((LunarDateArray[year - MinYear] & 0x0000FFFF), (16 - month)))
            {
                return 30;
            }
            else
            {
                return 29;
            }
        }
        #endregion
		
		        #region BitTest32
        /// <summary>
        /// 测试某位是否为真
        /// </summary>
        /// <param name="num"></param>
        /// <param name="bitpostion"></param>
        /// <returns></returns>
        private bool BitTest32(int num, int bitpostion)
        {

            if ((bitpostion > 31) || (bitpostion < 0))
                throw new Exception("Error Param: bitpostion[0-31]:" + bitpostion.ToString());

            int bit = 1 << bitpostion;

            if ((num & bit) == 0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        #endregion